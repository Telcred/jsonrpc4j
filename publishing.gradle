import io.codearte.gradle.nexus.BaseStagingTask
import io.codearte.gradle.nexus.NexusStagingPlugin

import javax.naming.ConfigurationException

buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0'
        classpath 'gradle.plugin.net.wooga.gradle:atlas-github:1.0.1'
        classpath 'net.researchgate:gradle-release:2.7.0'
        classpath 'org.ajoberstar:grgit:2.3.0'
        classpath 'org.kohsuke:github-api:1.93'
    }
}

ext {
    it.'signing.secretKeyRingFile' = project.findProperty('jsonrpc4j.signing.secretKeyRingFile') ?:
            project.findProperty('signing.secretKeyRingFile')
    it.'signing.password' = project.findProperty('jsonrpc4j.signing.password') ?:
            project.findProperty('signing.password')
    it.'signing.keyId' = project.findProperty('jsonrpc4j.signing.keyId') ?:
            project.findProperty('signing.keyId')
    sonatypeUsername = project.findProperty('jsonrpc4j.sonatype.username') ?:
            project.findProperty('sonatype.username')
    sonatypePassword = project.findProperty('jsonrpc4j.sonatype.password') ?:
            project.findProperty('sonatype.password')
    sonatypeStagingProfileId = project.findProperty('jsonrpc4j.sonatype.stagingProfileId') ?:
            project.findProperty('sonatype.stagingProfileId')
    it.'github.token' = project.findProperty('jsonrpc4j.github.token') ?:
            project.findProperty('github.token')
}

allprojects {
    apply plugin: 'maven-publish'
}

publishing {
    publications {
        jsonrpc4j(MavenPublication) {
            from components.java
            artifact documentationJar
            artifact sourcesJar
        }
    }
}

apply from: 'pom.gradle'
